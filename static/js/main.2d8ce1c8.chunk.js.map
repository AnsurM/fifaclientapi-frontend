{"version":3,"sources":["constants.js","Register.js","SignIn.js","PlayerData.js","TableClass.js","PlayerHandler.js","App.js","index.js"],"names":["constants","url","bcrypt","require","axios","Register","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","onNameChange","event","setState","name","target","value","onEmailChange","email","onPasswordChange","password","hasNumber","myString","test","onSubmitRegistration","_this$state","state","alert","fetch","method","headers","Content-Type","body","JSON","stringify","then","response","json","user","ChangeState2","notify","show","onSubmitReg2","_this$state2","myHash","that","assertThisInitialized","hash","err","length","post","status","updateRoute","catch","onSubmitReg1","onClickSignInButton","input","hashWord","react_default","a","createElement","notify_default","className","id","htmlFor","type","onChange","onClick","React","Component","window","onbeforeunload","SignIn","signInEmail","signInPassword","onSubmitSignIn","result","ChangeState","rollno","message","updateEmailAndApiKey","setEmailAndApiKey","apiKey","validateLogIn","route","mode","data","apikey","error","console","log","validateLogIn1","toString","includes","onSubmitSignIn1","_this2","TableClass","setDataValues","objectSpread","conditions","values","totalEarned","map","entry","earned","rows","totalEarning","tempCondition","assigned_to","auction_status","received_time","cardId","onClickGoBack","columns","tempConditions","dataColumns","dataRows","tableHeaders","column","tableBody","row","style","height","overflow","color","display","width","marginTop","marginLeft","Math","floor","backgroundColor","borderColor","padding","margin","borderWidth","textAlign","placeholder","concat","borderBottom","PlayerHandler","openModal","cancelid","visible","cardid","clickModalOK","cancelId","ret","msg","currPlayers","toConsumableArray","playerData","forEach","element","index","tempID","cardID","splice","displayPlayerData","closeModal","storePlayerData","prevData","tempData","player_name","player_rating","position","startingBid","buyNowPrice","tradeState","expires","tradeId","remTime","timeHandler","rating","tradeID","Date","getTime","time","days","hours","minutes","newData","notBought","playersLeft","myData","buttonStyle","fontSize","cancelButtonStyle","cardStyle","border","toBeDisplayed","player","key","react_countdown_clock_default","seconds","alpha","timeFormat","size","onComplete","onBuyClick","onCancelClick","noPlayerDisplay","displayData","justifyContent","tradeid","checkBoughtStatus","playerID","instance","maxPlayers","onKeyDown","onSubmit","playSoundStatus","getDataFromServer","max","searching","setTimeout","buttonText","onClickSignOut","onClickTable","signOutAllUsers","isAdmin","billingRate","timeRem","Date1","timeToExpire","secdiff","mindiff","hourdiff","timeToExp","_this3","addEventListener","ev","preventDefault","newRate","_this4","superLogOut","tabIndex","toUpperCase","overflowX","react_loading_default","lib_default","effect","borderSize","react_sound_lib_default","playStatus","playFromPosition","volume","autoLoad","loop","App","query","e","returnValue","src_SignIn_0","src_Register_0","src_PlayerHandler","src_TableClass","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.2d8ce1c8.chunk.js","sourcesContent":["//export default {url:'http://192.168.0.103:3001'};\r\n\r\n//export default {url: \"https://cors-anywhere.herokuapp.com/https://git.heroku.com/serene-inlet-50937.git\"};\r\n//export default {url: \"https://git.heroku.com/serene-inlet-50937.git\"};\r\n\r\nexport default {url: \"https://serene-inlet-50937.herokuapp.com\"};","import React from 'react';\r\nimport constants from './constants';\r\nimport './Register.css';\r\nimport Notifications, {notify} from 'react-notify-toast';\r\n\r\nconst bcrypt = require('bcrypt-nodejs');\r\n\r\nconst axios = require('axios');\r\n\r\n\r\nclass Register extends React.Component {\r\n\r\n    constructor(props){\r\n      super(props);\r\n\r\n      this.state = {\r\n        email: '',\r\n        password: '',\r\n        name:''\r\n      }\r\n\r\n    }\r\n\r\n    onNameChange = (event) => {\r\n      this.setState({name: event.target.value});\r\n    }\r\n\r\n    onEmailChange = (event) => {\r\n      this.setState({email: event.target.value});\r\n    }\r\n\r\n    onPasswordChange = (event) => {\r\n      this.setState({password: event.target.value});\r\n    }\r\n\r\n    hasNumber = (myString) => {\r\n      return /\\d/.test(myString);\r\n    }\r\n\r\n    onSubmitRegistration = () => {\r\n\r\n      const {email, password, name} = this.state;\r\n      if(!email || !password || !name)\r\n      {\r\n        if(!email)\r\n        {\r\n          notify.show(\"Email field can't be empty\");\r\n        }\r\n        else if(!password)\r\n        {\r\n          notify.show(\"Passwod field can't be empty\");\r\n        }\r\n        if(!name)\r\n        {\r\n          notify.show(\"Name field can't be empty\");\r\n        }\r\n      }\r\n      else if(this.hasNumber(name))\r\n      {\r\n        alert(\"Name can only contain alphabets.\");\r\n      }\r\n      else\r\n      {\r\n\r\n        fetch('https://gentle-everglades-47985.herokuapp.com/register',{\r\n          method: 'post',\r\n          headers: {'Content-Type': 'application/json'},\r\n          body: JSON.stringify({\r\n          email: this.state.email,\r\n          password: this.state.password,\r\n          name: this.state.name,\r\n          })\r\n        })\r\n        .then(response => response.json())\r\n        .then(user => {\r\n      //    console.log(user);\r\n          if(user === true)\r\n          {        \r\n            alert(\"Registration successful!\");\r\n            this.props.ChangeState2('Administrator','');\r\n          }\r\n          else if (user === false)\r\n          {\r\n            alert(\"Error entering student!\");\r\n          }\r\n          else {\r\n            alert(\"This user already is registered!\");\r\n          }\r\n        })\r\n\r\n      }\r\n    }\r\n\r\n    async hashString(input){\r\n      var hashWord = \"\";\r\n      if(input.length > 0)\r\n      {\r\n        hashWord = await bcrypt.hash(input, null, null, function(err, hash) {\r\n            // Store hash in your password DB.\r\n              return hash;\r\n        })\r\n      //  console.log('hashword ', hashWord);\r\n        return await hashWord;\r\n      }\r\n    }\r\n\r\n    onSubmitReg2 = () => {\r\n\r\n      const {email, password, name} = this.state;\r\n      if(!email || !password || !name)\r\n      {\r\n        if(!email)\r\n        {\r\n          alert(\"Email field can't be empty\");\r\n        }\r\n        if(!password)\r\n        {\r\n          alert(\"Password field can't be empty\");\r\n        }\r\n        if(!name)\r\n        {\r\n          alert(\"Name field can't be empty\");\r\n        }\r\n      }\r\n      else if(this.hasNumber(name))\r\n      {\r\n        alert(\"Name can only contain alphabets.\");\r\n      }\r\n      else\r\n      {\r\n        let myHash = \"\";\r\n          let that = this;\r\n          bcrypt.hash(this.state.password, null, null, function(err, hash) {\r\n              // Store hash in your password DB.\r\n                if(!err)\r\n                {\r\n                  myHash = hash;\r\n          //        console.log('myHash ', myHash);\r\n\r\n          //        console.log('hash ', myHash);\r\n                  if(myHash.length > 0)\r\n                  {\r\n                    axios.post(constants.url + '/register', {\r\n                      email: that.state.email,\r\n                      password: myHash,\r\n                      name: that.state.name,\r\n                    })\r\n              \r\n                    \r\n                    // fetch(constants.url + '/register',{\r\n                    //   method: 'post',\r\n                    //   headers: {'Content-Type': 'application/json'},\r\n                    //   body: JSON.stringify({\r\n                    //   email: that.state.email,\r\n                    //   password: myHash,\r\n                    //   name: that.state.name,\r\n                    //   })\r\n                    // })\r\n                    .then(user => {\r\n          //            console.log('user ', user);\r\n                      if(user.status === 200)\r\n                      {        \r\n                        alert(\"Registration successful!\");\r\n                        that.props.updateRoute(\"Login\");\r\n                      }\r\n                      else if (user.status === 400)\r\n                      {\r\n                        alert(\"This user already is registered!\");\r\n                      }\r\n                    })\r\n                    .catch(err => notify.show(\"The page behaved unexpectedly while trying to register. Please try again shortly.\", \"error\", 10000));\r\n                  }\r\n                  else\r\n                  {\r\n                    notify.show(\"The page behaved unexpectedly while trying to register. Please try again shortly.\", \"error\", 10000);\r\n                  }\r\n                }\r\n                else\r\n                {\r\n                  notify.show(\"The page behaved unexpectedly while trying to register. Please try again shortly.\", \"error\", 10000);\r\n                }\r\n        })\r\n      }\r\n    }\r\n\r\n    onSubmitReg1 = () =>\r\n  {\r\n    this.props.updateRoute(\"Login\");\r\n  }\r\n\r\n    onClickSignInButton = () => {\r\n      this.props.updateRoute(\"Login\");\r\n    }\r\n\r\n    render (){\r\n      return (\r\n        <div>\r\n        <Notifications />\r\n        <article className=\"br3 w-100 w-50-m w-25-l mw6 shadow-5 center registerbox\">\r\n        <main className=\"pa4 black-80\">\r\n        <div className=\"measure\">\r\n          <fieldset id=\"sign_up\" className=\"ba b--transparent ph0 mh0\">\r\n            <legend className=\"f1 fw6 ph0 mh0 myTColor\">Register</legend>\r\n            <div className=\"mt1\">\r\n              <label className=\"db fw6 lh-copy f4 myTColor\" htmlFor=\"name\">Name</label>\r\n              <input \r\n              className=\"pa2 w-100\" \r\n              type=\"text\" \r\n              name=\"name\"  \r\n              id=\"name\"\r\n              onChange={this.onNameChange}\r\n              />\r\n            </div>\r\n            <div className=\"mt1\">\r\n              <label className=\"db fw6 lh-copy f4 myTColor\" htmlFor=\"email-address\">Email</label>\r\n              <input \r\n              className=\"pa2 w-100\" \r\n              type=\"email\" \r\n              name=\"email-address\"  \r\n              id=\"email-address\"\r\n              onChange={this.onEmailChange}\r\n              />\r\n            </div>\r\n            <div className=\"mv1\">\r\n              <label className=\"db fw6 lh-copy f4 myTColor\" htmlFor=\"password\">Password</label>\r\n              <input \r\n              className=\"pa2 w-100\" \r\n              type=\"password\" \r\n              name=\"password\"  \r\n              id=\"password\"\r\n              onChange={this.onPasswordChange}\r\n              />\r\n            </div>\r\n          </fieldset>\r\n          <div className=\"\">\r\n            <input \r\n            onClick = {this.onSubmitReg2}\r\n            className=\"input b ph3 pv2 input-reset ba b--black hover-bg-green grow pointer f6 dib\" \r\n            type=\"submit\" \r\n            value=\"Register\"/>\r\n            <input \r\n            onClick = {this.onClickSignInButton}\r\n            className=\"input b ph3 pv2 input-reset ba b--black hover-bg-green grow pointer f6 dib\" \r\n            type=\"submit\" \r\n            value=\"Sign In\"/>\r\n          </div>\r\n        </div>\r\n      </main>\r\n      </article>\r\n    </div>\r\n    );\r\n\r\n  }\r\n\r\n}\r\n\r\nexport default Register;","import React from 'react';\r\nimport './SignIn.css';\r\nimport constants from './constants';\r\nimport Notifications, {notify} from 'react-notify-toast';\r\n\r\nconst axios = require('axios');\r\n\r\nwindow.onbeforeunload = function() {\r\n  return 'You have unsaved changes!';\r\n}\r\n\r\nclass SignIn extends React.Component {\r\n\r\n  constructor(props){\r\n    super(props);\r\n\r\n    this.state = {\r\n      signInEmail: '',\r\n      signInPassword: '',\r\n      apiKey: '',\r\n    }\r\n\r\n  }\r\n\r\n  onEmailChange = (event) => {\r\n    this.setState({signInEmail: event.target.value});\r\n  }\r\n\r\n  onPasswordChange = (event) => {\r\n    this.setState({signInPassword: event.target.value});\r\n  }\r\n\r\n  onSubmitSignIn = () => {\r\n\r\n      fetch('https://gentle-everglades-47985.herokuapp.com/signin',{\r\n      method: 'post',\r\n      headers: {'Content-Type': 'application/json'},\r\n      body: JSON.stringify({\r\n      email: this.state.signInEmail,\r\n      password: this.state.signInPassword\r\n      })\r\n    })\r\n    .then(response => response.json())\r\n    .then(result => {\r\n          if(result.name)\r\n          {            \r\n            this.props.ChangeState('home', result.email, result.name, result.rollno)\r\n          }\r\n          else\r\n          {\r\n            notify.show(result.message);\r\n          }\r\n    })\r\n    .catch(err => notify.show(err.message))\r\n\r\n  }\r\n\r\n  updateEmailAndApiKey = () =>\r\n  {\r\n    // console.log('email: ', this.state.signInEmail);\r\n    this.props.setEmailAndApiKey(this.state.signInEmail, this.state.apiKey);\r\n  }\r\n\r\n   validateLogIn = (route) => {\r\n    let that = this;\r\n    fetch(constants.url + '/signin',{\r\n      method: 'post',\r\n      mode:'cors',\r\n      headers: {'Content-Type': 'application/json'},\r\n      body: JSON.stringify({\r\n      email: this.state.signInEmail,\r\n      password: this.state.signInPassword,\r\n      })\r\n    })\r\n    .then(response => {\r\n    //    console.log(response);\r\n        if(response.status == 200)\r\n        {          \r\n           fetch(constants.url + '/getApiKey',{\r\n                method: 'post',\r\n                headers: {'Content-Type': 'application/json'},\r\n                body: JSON.stringify({\r\n                email: this.state.signInEmail,\r\n                })\r\n              })\r\n              .then(response => response.json()) \r\n              .then(data =>\r\n            {\r\n              // console.log('resp ', data);\r\n              that.setState({signInEmail: data.email});\r\n              that.setState({apiKey: data.apikey});\r\n              that.updateEmailAndApiKey();\r\n              if(this.state.apiKey)\r\n              {\r\n                this.props.updateRoute(route);\r\n              }\r\n            })\r\n            .catch(function (error) {\r\n              console.log(\"Error: \" , error);\r\n              notify.show(\"There was an error trying to login. Please try again shortly.\", \"error\", 10000);\r\n            });\r\n        }\r\n        else\r\n        {\r\n          if(response.status == 400)\r\n          {\r\n            console.log(\"Error: \" , response);\r\n            notify.show(\"The login details are invalid. Please re-check and try again.\", \"warning\", 7000);\r\n          }\r\n          else\r\n          {\r\n            console.log(\"Error: \" , response);\r\n            notify.show(\"There was an error trying to login. Please try again shortly.\", \"error\", 10000);\r\n          }\r\n        }\r\n      })\r\n    .catch(err => {        \r\n      console.log(\"Error: \" , err);\r\n      notify.show(\"There was an error trying to login. Please try again shortly.\", \"error\", 10000);\r\n    });\r\n}\r\n\r\n  validateLogIn1 = (route) => \r\n  {\r\n    let that = this;\r\n//    notify.show(\"Logging in. Please wait.\", \"success\", 3000);\r\n//    notify.show(\"Logging in. Please wait.\", \"success\", 1000);\r\n    axios.post(constants.url + '/signin', {\r\n        email: this.state.signInEmail,\r\n        password: this.state.signInPassword,\r\n      })\r\n      .then(function (response) {\r\n        console.log(response);\r\n        if(response.status == 200)\r\n        {          \r\n           fetch(constants.url + '/getApiKey',{\r\n                method: 'post',\r\n                headers: {'Content-Type': 'application/json'},\r\n                body: JSON.stringify({\r\n                email: that.state.signInEmail,\r\n                })\r\n              })\r\n              .then(response => response.json()) \r\n              .then(data =>\r\n            {\r\n              // console.log('resp ', data);\r\n              that.setState({signInEmail: data.email});\r\n              that.setState({apiKey: data.apikey});\r\n              that.updateEmailAndApiKey();\r\n              if(that.state.apiKey)\r\n              {\r\n                that.props.updateRoute(route);\r\n              }\r\n            })\r\n            .catch(function (error) {\r\n              notify.show(\"Server error occured. Please retry logging in after a few minutes. \", \"warning\", 5000);\r\n            });\r\n        }\r\n      })\r\n      .catch(function (error) {\r\n        console.log(\"Login error: \", error);\r\n        let myErr = error.toString();\r\n        if(myErr.includes(\"400\"))\r\n        {\r\n          notify.show(\"Invalid login credentials detected. Please verify and try again. \", \"error\", 5000);\r\n        }\r\n        else\r\n        {\r\n          notify.show(\"Server error occured. Please retry logging in after a few minutes or contact the admin if problem persists.\", \"warning\", 5000);\r\n        }\r\n      });    \r\n  }\r\n\r\n onSubmitSignIn1 = (route) =>\r\n  {\r\n    if(route == \"Register\")\r\n    {\r\n      this.props.updateRoute(route);\r\n    }\r\n    else\r\n    {\r\n//      notify.show(\"Logging in. Please wait.\", \"success\", 200);\r\n      this.validateLogIn1(route);\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n  }\r\n  \r\n\r\n  render(){\r\n    return (\r\n      <div>\r\n      <Notifications />\r\n      <article className=\"br3 w-100 w-50-m w-25-l mw6 shadow-5 center signinbox\">\r\n      <main className=\"pa4 black-80\">\r\n        <div className=\"measure\">\r\n          <fieldset id=\"sign_up\" className=\"ba b--transparent ph0 mh0\">\r\n            <legend className=\"signIn\">Sign In</legend>\r\n            <div className=\"mt3\">\r\n              <label className=\"db fw6 lh-copy f4 myTColor\" htmlFor=\"email-address\">Email</label>\r\n              <input \r\n              className=\"pa2 w-100\" \r\n              type=\"email\" \r\n              name=\"email-address\"  \r\n              id=\"email-address\"\r\n              onChange = {this.onEmailChange}\r\n              />\r\n            </div>\r\n            <div className=\"mv3\">\r\n              <label className=\"db fw6 lh-copy f4 myTColor\" htmlFor=\"password\">Password</label>\r\n              <input \r\n              className=\"pa2 w-100\" \r\n              type=\"password\" \r\n              name=\"password\"  \r\n              id=\"password\"\r\n              onChange = {this.onPasswordChange}\r\n\r\n              />\r\n            </div>\r\n          <div>\r\n            <input \r\n            onClick = {() => this.onSubmitSignIn1(\"App\")}\r\n            className=\"input b ph3 pv2 input-reset ba b--black hover-bg-green grow pointer f6 dib\" \r\n            type=\"submit\" \r\n            value=\"Sign in\"/>\r\n          </div>\r\n          <br />\r\n          <div>\r\n            <input \r\n            onClick = {() => this.onSubmitSignIn1(\"Register\")}\r\n            className=\"input b ph3 pv2 input-reset ba b--black hover-bg-green grow pointer f6 dib\" \r\n            type=\"submit\" \r\n            value=\"Register User\"/>\r\n          </div>\r\n          </fieldset>\r\n        </div>\r\n      </main>\r\n      </article>\r\n      </div>\r\n  \t );\r\n  }\r\n}\r\nexport default SignIn;","import React, {Component} from 'react';\r\n\r\nclass PlayerData extends Component {\r\n\r\n    constructor(props){\r\n\r\n        super(props);\r\n        this.state = {\r\n            Data: <h3>Press \"Request Data\" to check for available players.</h3>,\r\n            email: this.props.data.email,\r\n            apikey: this.props.data.apikey,\r\n            playersLeft: 0,\r\n            instance: 0,\r\n            tradeID: [],\r\n            assignedActive: [],\r\n            ph: \"\"\r\n        };\r\n    }\r\n\r\n    onBuyClick = (event, index) =>\r\n    {\r\n        let myData = {...this.state.Data};\r\n        console.log(\"MyData is: \", myData);\r\n        let myData1 = [];\r\n        let boughtID = 0;\r\n        var currAssigned = [...this.state.assignedActive];\r\n        var leftAssigned = [];\r\n        // console.log('Assgined players are: ', currAssigned);\r\n        myData.props.children.forEach((player, myindex) =>\r\n            {\r\n               if(player.key == index)\r\n                {\r\n\r\n                    console.log(\"Player: \", player);\r\n                    // console.log(\"Bought player is: \", player.props.tradeID);\r\n                    boughtID = player.props.tradeID;\r\n                    //    myData.props.children.splice(myindex,1)\r\n                    // myData1.push(player);\r\n                    var ptag = document.createElement(\"p\");\r\n                    var text = document.createTextNode(\"Bought Status: Checking!\");\r\n                    ptag.appendChild(text);\r\n                    document.getElementById(player.key).appendChild(ptag);\r\n                    currAssigned.forEach((element, thisindex) => {\r\n                        // console.log(\"Element: \", element);\r\n                        if(element == player.props.tradeID)\r\n                        {\r\n                        }\r\n                        else\r\n                        {\r\n                          leftAssigned.push(element);\r\n                        }\r\n                    });\r\n                }\r\n                else\r\n                {\r\n                    myData1.push(player);\r\n                }\r\n        });\r\n            // console.log(\"MyData1 is : \", myData1.length);\r\n            // console.log(\"current assigned is : \", leftAssigned);\r\n            // console.log(\"Bought ID: \", boughtID);\r\n            // this.setState({Data: myData, playersLeft: myData.props.children.length});\r\n                this.setState({Data: myData, playersLeft: leftAssigned.length, assignedActive: leftAssigned});\r\n    }\r\n\r\n    onChange = (event) =>\r\n    {\r\n        if(event.target.value > 0)\r\n        {\r\n            this.setState({\r\n                instance: event.target.value\r\n            });\r\n        }\r\n        else\r\n        {\r\n            this.setState({\r\n                instance: 0\r\n            });\r\n        }\r\n    }\r\n\r\n    async storePlayers(data)\r\n    {\r\n        let that = this;\r\n        const buttonStyle =\r\n        {\r\n            backgroundColor: \"green\",\r\n            color: \"yellow\",\r\n            width: \"60%\",\r\n            height: \"auto\",\r\n            padding: \"10px\",\r\n            fontSize: \"20px\"\r\n        };\r\n\r\n        const cardStyle =\r\n        {\r\n            backgroundColor: \"black\",\r\n            color: \"orange\",\r\n            border: \"2px solid green\",\r\n            padding: \"20px\",            \r\n            marginLeft: '30px', \r\n            marginTop: '20px'\r\n        };\r\n\r\n        if(data.data)\r\n        {\r\n            // console.log('Data :', data.data);\r\n                let displayToUser = data.data.map((player, index) => {\r\n\r\n                return (    \r\n                    <div id = {index} tradeID = {player.tradeId} key = {index} style={cardStyle}>\r\n                        <h2>Name: {player.player_name}</h2>\r\n                        <h3>Rating: {player.player_rating}</h3>\r\n                        <h3>Position: {player.position}</h3>\r\n                        <h3>Starting bid: {player.startingBid}</h3>\r\n                        <h3>Buy Now Price: {player.buyNowPrice}</h3>\r\n                        <h3>Time Remaining:</h3>\r\n                        <h3>{data.days} day(s), {data.hours} hours, {data.minutes} minutes.</h3>\r\n                        <button style={buttonStyle} onClick = {(event) => this.onBuyClick(event,index)}>Bought</button>\r\n                        <br />\r\n                    </div> \r\n                    );\r\n                }\r\n                );\r\n\r\n                const assignedPlayers = data.data.map(player =>\r\n                    {\r\n                        return player.tradeId;\r\n                    });\r\n\r\n                    that.setState(\r\n                    {\r\n                        Data: \r\n                            <div style={{display:'flex', justifyContent: 'center'}}>\r\n                            {displayToUser}\r\n                            </div>,\r\n                            playersLeft: displayToUser.length,\r\n                            assignedActive: assignedPlayers\r\n                    }\r\n                );\r\n        }\r\n        else\r\n        {\r\n//            console.log(data);\r\n            this.setState({\r\n                Data: <div>\r\n                        <br />\r\n                        <h2>Server response: {data.message}</h2>\r\n                      </div>\r\n            })\r\n        }\r\n        this.setState({ph: \"\"});\r\n    }\r\n\r\n    onKeyDown = (event) =>\r\n    {\r\n        if(event.key == \"Enter\")\r\n        {\r\n            this.onSubmit();\r\n        }\r\n    }\r\n\r\n    onSubmit = () =>\r\n    {\r\n        if(this.state.playersLeft == 0)\r\n        {\r\n\r\n            fetch('http://localhost:3001/getData',{\r\n                method: 'post',\r\n                headers: {'Content-Type': 'application/json'},\r\n                body: JSON.stringify({\r\n                email: this.state.email,\r\n                apikey: this.state.apikey,\r\n                instance: this.state.instance\r\n                })\r\n            })\r\n            .then(response => response.json())             \r\n            .then(data => {\r\n                this.storePlayers(data);\r\n            })\r\n            .catch(function (error) {\r\n                console.log(error);\r\n            });\r\n        }        \r\n        else\r\n        {\r\n            const tempData = this.state.Data;\r\n            const players = this.state.playersLeft;\r\n            alert(`Please buy the remaining ${players} player(s) before requesting new players.`);\r\n\r\n//            this.setState({Data: <h2>Getting data..</h2>, playersLeft: 0});\r\n            this.setState({Data: tempData, playersLeft: players});\r\n        }\r\n    }\r\n\r\n    render()\r\n    {\r\n        // console.log('Data : ', this.state.Data);   \r\n        return(\r\n            <div tabIndex = {1} key = {this.state.playersLeft} onKeyDown = {this.onKeyDown}>\r\n                <div style={{display:'flex', justifyContent: 'center'}}>\r\n                <button type='submit' onClick={this.onSubmit}><h3>Request Data</h3></button>\r\n                </div>\r\n                <h4>Max no of players at once.</h4>\r\n                <input style={{marginLeft: '10px'}}\r\n                        placeholder={`Current Max Players: ${this.state.instance}`} \r\n                        value = {\"\"}\r\n                        onChange={this.onChange} />\r\n                {this.state.Data}  \r\n            </div> \r\n        );\r\n    }\r\n}\r\n\r\nexport default PlayerData;","import React, {Component} from 'react';\r\nimport constants from './constants';\r\nimport Notifications, {notify} from 'react-notify-toast';\r\n\r\n  // Example Data\r\n  var tableData = {\r\n    columns: ['Service', 'Cost/Unit', 'Unit', 'Units Requested'],\r\n    rows: [{\r\n      'Service': 'Veterinary Assitance',\r\n      'Cost/Unit': 50,\r\n      'Unit': '1 Hour',\r\n      'Units Requested': 12\r\n    }, {\r\n      'Service': 'Veterinary Assitance',\r\n      'Cost/Unit': 50,\r\n      'Unit': '1 Hour',\r\n      'Units Requested': 12\r\n    }, {\r\n      'Service': 'Veterinary Assitance',\r\n      'Cost/Unit': 50,\r\n      'Unit': '1 Hour',\r\n      'Units Requested': 12\r\n    }, {\r\n      'Service': 'Veterinary Assitance',\r\n      'Cost/Unit': 50,\r\n      'Unit': '1 Hour',\r\n      'Units Requested': 12\r\n    }, {\r\n      'Service': 'Veterinary Assitance',\r\n      'Cost/Unit': 50,\r\n      'Unit': '1 Hour',\r\n      'Units Requested': 12\r\n    }, {\r\n      'Service': 'Veterinary Assitance',\r\n      'Cost/Unit': 50,\r\n      'Unit': '1 Hour',\r\n      'Units Requested': 12\r\n    }, {\r\n      'Service': 'Veterinary Assitance',\r\n      'Cost/Unit': 50,\r\n      'Unit': '1 Hour',\r\n      'Units Requested': 12\r\n    }, {\r\n      'Service': 'Veterinary Assitance',\r\n      'Cost/Unit': 50,\r\n      'Unit': '1 Hour',\r\n      'Units Requested': 12\r\n    }, {\r\n      'Service': 'Veterinary Assitance',\r\n      'Cost/Unit': 50,\r\n      'Unit': '1 Hour',\r\n      'Units Requested': 12\r\n    }, {\r\n      'Service': 'foo',\r\n      'Unit': null,\r\n      'Cost/Unit': undefined,\r\n      'Units Requested': 42\r\n    }]\r\n  };\r\n\r\n\r\nclass TableClass extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            data: {columns: [], rows: []},\r\n            totalEarning: 0,\r\n            conditions: {\r\n              cardId: \"\",\r\n              assigned_to: \"\",\r\n              auction_status: \"\",\r\n              received_time: \"\",\r\n            },\r\n        };\r\n    }\r\n    \r\n    setDataValues = () =>\r\n    {\r\n        let myConditions = {...this.state.conditions};\r\n    \r\n        fetch(constants.url + '/getAuctionData',{\r\n            method: 'post',\r\n            headers: {'Content-Type': 'application/json'},\r\n            body: JSON.stringify({\r\n            email: this.props.data.email,\r\n            apikey: this.props.data.apikey,\r\n            conditions: this.state.conditions\r\n            })\r\n        })\r\n        .then(response => response.json())             \r\n        .then(data => {\r\n            console.log(\"Data is: \", data);\r\n            \r\n          if(!data.length)\r\n          {\r\n            notify.show(\"There were no records found in the server.\");\r\n              alert(\"No records found\");  \r\n          }\r\n\r\n          else\r\n          {\r\n            let values = [];\r\n            var totalEarned = 0;\r\n            if(Object.values(data))\r\n            {\r\n              values = data;\r\n              values.map(entry => {\r\n                totalEarned = totalEarned + entry.earned;\r\n                this.setState({\r\n                  data: {\r\n//                        columns: columns,\r\n                      rows: values\r\n                  },\r\n                totalEarning: totalEarned\r\n              });\r\n            })\r\n            }\r\n          }\r\n        })\r\n        .catch(function (error) {\r\n            console.log(\"Records error: \", error);\r\n            notify.show(\"There was an error trying to obtain records. Please try again shortly.\", \"error\", 10000);\r\n          });    \r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setDataValues();\r\n    }\r\n\r\n    onChange = (event) => {\r\n    //    console.log(\"Triggered: \",event.target);\r\n        let value = event.target.value;\r\n        let tempCondition = {...this.state.conditions};\r\n        if(event.target.id == \"assign\")\r\n        {\r\n          tempCondition.assigned_to = value;\r\n        }\r\n        if(event.target.id == \"status\")\r\n        {\r\n          tempCondition.auction_status = value;\r\n        }\r\n        if(event.target.id == \"date\")\r\n        {\r\n          tempCondition.received_time = value;\r\n        }\r\n        if(event.target.id == \"cardid\")\r\n        {\r\n          tempCondition.cardId = value;\r\n        }\r\n        this.setState({\r\n          conditions: tempCondition\r\n        }, () => this.setDataValues()\r\n        );\r\n    }\r\n\r\n    onClickGoBack = () => {\r\n          this.props.updateRoute(\"App\");\r\n    }\r\n\r\n\r\n    render() {\r\n    //    console.log(this.state.data);\r\n\r\n        let tempConditions = {\r\n          cardId: \"\",\r\n          assigned_to: \"\",\r\n          auction_status: \"\",\r\n          received_time: \"\",\r\n        };\r\n\r\n        if(this.state.conditions.cardId)\r\n        {\r\n            tempConditions.cardId = this.state.conditions.cardId;\r\n        }\r\n        if(this.state.conditions.assigned_to)\r\n        {\r\n            tempConditions.assigned_to = this.state.conditions.assigned_to;\r\n        }\r\n        if(this.state.conditions.auction_status)\r\n        {\r\n            tempConditions.auction_status = this.state.conditions.auction_status;\r\n        }\r\n        if(this.state.conditions.received_time)\r\n        {\r\n            tempConditions.received_time = this.state.conditions.received_time;\r\n        }\r\n\r\n        // Data\r\n\r\n        // var dataColumns = tableData.columns;\r\n        // var dataRows = tableData.rows;\r\n\r\n        var dataColumns = [\"cardId\", \"tradeId\", \"player_details\", \"earned\", \"assigned_to\", \"auction_status\", \"received_time\"];\r\n\r\n        var dataRows = [];\r\n\r\n        // var dat\r\n\r\n      if(this.state.data.rows)\r\n      {\r\n//          dataColumns = this.state.data.columns;\r\n          dataRows = this.state.data.rows;\r\n      }\r\n      else\r\n      {\r\n//        dataColumns = [\"Card ID\", \"Trade ID\", \"Player Details\", \"Earned\", \"Assigned To\", \"Auction Status\", \"Received Time\"];\r\n      }\r\n    //   console.log\r\n      var tableHeaders = (<thead>\r\n            <tr>\r\n              {dataColumns.map(function(column) {\r\n                return <th>{column}</th>; })}\r\n            </tr>\r\n        </thead>);\r\n  \r\n      var tableBody = dataRows.map(function(row) {\r\n        return (\r\n          <tr>\r\n            {dataColumns.map(function(column) {\r\n              return <td>{row[column]}</td>; })}\r\n          </tr>); });\r\n       \r\n      // Decorate with Bootstrap CSS\r\n      return (\r\n        <div style = {{height: \"700px\", overflow:\"scroll\", color: \"white\"}}>\r\n        <Notifications />\r\n            <div style={{display: \"flex\", width: \"100%\"}}>\r\n\r\n                    <div style={{width: \"20%\"}}>\r\n                        <div style={{marginTop: \"5%\", marginLeft: \"5%\"}}>\r\n                          <h2 style={{color: \"gold\"}}>Total Earned is: </h2>\r\n                          <h2 style={{color: \"chartreuse\"}}>{Math.floor(this.state.totalEarning)}</h2>\r\n                        </div>\r\n                        <div>                          \r\n                          <button \r\n                          style = {{backgroundColor: \"black\", color:\"red\", borderColor: \"gold\", \r\n                                width: \"auto\", height: \"auto\", padding: \"8px\", margin: \"30px 50px\"}}                        \r\n                          onClick={this.onClickGoBack}>Go Back</button>\r\n                        </div>\r\n                    </div>\r\n\r\n\r\n                    <div style={{display:\"flex\", width: \"80%\", marginLeft: \"5%\"}}>\r\n                      <div style={{ width: \"40%\", }}>\r\n                      <h4>Card ID: </h4>\r\n                      <input id=\"cardid\" style={{marginLeft: '10px', borderColor: \"gold\", borderWidth: \"3px\",\r\n                                      backgroundColor: \"#3A4245\", color: \"gold\", textAlign: \"center\",\r\n                                    width: \"200px\", height: \"30px\"\r\n                              }}\r\n                          placeholder= \"\" \r\n                          value = {`${tempConditions.cardId}`}\r\n                          onChange={this.onChange} ></input>\r\n                      <h4>Assigned To: </h4>\r\n                      <input id=\"assign\" style={{marginLeft: '10px', borderColor: \"gold\", borderWidth: \"3px\",\r\n                                      backgroundColor: \"#3A4245\", color: \"gold\", textAlign: \"center\",\r\n                                    width: \"200px\", height: \"30px\"\r\n                              }}\r\n                          placeholder= \"\" \r\n                          value = {`${tempConditions.assigned_to}`}\r\n                          onChange={this.onChange} ></input>\r\n\r\n                      </div>                    \r\n                      <div style={{ width: \"40%\", }}>\r\n                      <h4>Auction Status: </h4>\r\n                      <input id=\"status\" style={{marginLeft: '10px', borderColor: \"gold\", borderWidth: \"3px\",\r\n                                      backgroundColor: \"#3A4245\", color: \"gold\", textAlign: \"center\",\r\n                                    width: \"200px\", height: \"30px\"\r\n                              }}\r\n                          placeholder= \"\" \r\n                          value = {`${tempConditions.auction_status}`}\r\n                          onChange={this.onChange} ></input>\r\n                      <h4>Received Time: </h4>\r\n                      <input id=\"date\" style={{marginLeft: '10px', borderColor: \"gold\", borderWidth: \"3px\",\r\n                                      backgroundColor: \"#3A4245\", color: \"gold\", textAlign: \"center\",\r\n                                    width: \"200px\", height: \"30px\"\r\n                              }}\r\n                          placeholder= \"\" \r\n                          value = {`${tempConditions.received_time}`}\r\n                          onChange={this.onChange} ></input>\r\n                      </div>\r\n                    </div>\r\n            </div>\r\n              <br />\r\n              <hr style={{borderBottom:\"1px dashed black\"}}/>\r\n              <br />\r\n            <table className=\"table table-bordered table-hover\" width=\"100%\">\r\n                {tableHeaders}\r\n                {tableBody}\r\n            </table>\r\n        </div>\r\n      ) \r\n    }\r\n}\r\n          \r\n\r\nexport default TableClass;\r\n","import React, { Component } from 'react';\r\nimport Modal from 'react-awesome-modal';\r\nimport Sound from 'react-sound';\r\nimport Notifications, {notify} from 'react-notify-toast';\r\nimport ReactLoading from 'react-loading';\r\nimport ReactCountdownClock from 'react-countdown-clock';\r\nimport constants from './constants';\r\n\r\n\r\nclass PlayerHandler extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            displayData: <h3></h3>,\r\n            buttonText: \"Request Players.\",\r\n            searching: false,\r\n            noPlayerDisplay: <h3>Press \"Request Data\" to check for available players.</h3>,\r\n            playerData: [],\r\n            email: this.props.data.email,\r\n            apikey: this.props.data.apikey,\r\n            isAdmin: this.props.data.email == 'admin@themarket.org' ? true : false,\r\n\r\n            billingRate: \"Fetching Billing Rate. Please refresh if it doesn't update in 10 seconds.\",\r\n            playersLeft: 0,\r\n            instance: \"\",\r\n            maxPlayers: 2,\r\n            visible: false,\r\n            cardid: 0,\r\n            playSoundStatus: \"STOPPED\"\r\n        }        \r\n    }\r\n\r\n    openModal = (cancelid) => {\r\n        this.setState({\r\n            visible : true,\r\n            cardid: cancelid\r\n        });\r\n    }\r\n\r\n    clickModalOK = () =>\r\n    {           \r\n        fetch(constants.url + '/cancelAuction',{\r\n            method: 'post',\r\n            headers: {'Content-Type': 'application/json'},\r\n            body: JSON.stringify({\r\n            cancelId: this.state.cardid,\r\n            })\r\n        })\r\n        .then(response => response.json())             \r\n        .then(data => {\r\n//            console.log(\"Cancel request returned: \", data.msg);\r\n            if(data.ret == 0)\r\n            {\r\n                notify.show((\"The purchase was successfully cancelled.\"), \"error\", 6000);\r\n            }\r\n            else\r\n            {\r\n                notify.show(`The purchase cannot be cancelled. Reason: ${data.msg}`, \"warning\", 6000);\r\n                // this.setState({noPlayerDisplay: <h3>{`${data.message} \\t`}</h3>})\r\n            }\r\n\r\n            let currPlayers = [...this.state.playerData];\r\n\r\n            currPlayers.forEach((element,index) =>\r\n            {\r\n                let tempID = this.state.cardid;\r\n                if(element.cardID == tempID)\r\n                {\r\n                    currPlayers.splice(index, 1);\r\n                }\r\n            });\r\n\r\n            this.setState(\r\n                {cardid: 0, playerData: currPlayers, visible: false},\r\n                () => this.displayPlayerData(currPlayers)                \r\n                );\r\n        })\r\n        .catch(function (error) {\r\n            notify.show((error), \"error\", 5000);\r\n            this.setState({cardid: 0, visible: false});\r\n        });\r\n    }\r\n\r\n    closeModal = () => {\r\n        this.setState({\r\n            cardid: 0,\r\n            visible : false\r\n        });\r\n    }\r\n\r\n    timeHandler(timeRem)\r\n    {\r\n        let Date1 = Math.floor( new Date().getTime()/1000 );\r\n        let Date2 = timeRem;\r\n        let Date3 = Date1 + 300;\r\n\r\n        var timeToExpire = Date3 - Date1;\r\n        \r\n        var secdiff = Date2 - Date1; \r\n    //    console.log((\"Seconds to expire: \", secdiff));\r\n        var mindiff = Math.floor( secdiff / 60 );\r\n        secdiff = secdiff % 60;\r\n        var hourdiff = Math.floor( mindiff / 60 );\r\n        mindiff = mindiff % 60;\r\n        var daydiff = Math.floor( hourdiff / 24 );\r\n        hourdiff = hourdiff % 24;\r\n        \r\n        const diff = {\r\n            days: daydiff,\r\n            hours: hourdiff,\r\n            minutes: mindiff,\r\n            timeToExp: timeToExpire\r\n        };\r\n    \r\n        return diff;\r\n    }\r\n\r\n    storePlayerData = (data) => \r\n    {\r\n        let prevData = this.state.playerData;\r\n//        console.log(\"Data is: \", data.data);\r\n        let tempData = data.data.map(element => {\r\n            const { player_name, player_rating, position, startingBid, buyNowPrice, tradeState, cardId, expires, tradeId} = element;\r\n            let remTime = this.timeHandler(expires);\r\n    //        console.log(\"Rem time is: \", remTime);\r\n            //            let randomID = Math.floor(Math.random() * 16739589301);\r\n            return {\r\n                name: player_name,\r\n                position: position,\r\n                rating: player_rating,\r\n                startingBid: startingBid,\r\n                buyNowPrice: buyNowPrice,\r\n                cardID: cardId,\r\n                tradeID: tradeId,\r\n                status: tradeState,\r\n                expires: (Math.floor( new Date().getTime()/1000)) + 270,\r\n                time: {days: remTime.days,hours: remTime.hours, minutes: remTime.minutes}\r\n            };\r\n        });\r\n        let newData = [...prevData, ...tempData];\r\n        let notBought = 0;\r\n        newData.forEach(element =>\r\n            {\r\n                if(element.status == \"active\")\r\n                {\r\n                    notBought++;\r\n                }\r\n                else\r\n                {\r\n\r\n                }\r\n        })\r\n        this.setState({playerData: newData, playersLeft: notBought},() => {\r\n            this.displayPlayerData(newData);\r\n        });\r\n    }\r\n\r\n    displayPlayerData = (myData) =>\r\n    {\r\n        // console.log(\"New data is: \", data);\r\n        let that = this;\r\n        const buttonStyle =\r\n        {\r\n            backgroundColor: \"green\",\r\n            color: \"yellow\",\r\n            width: \"80px\",\r\n            margin: \"10px 10px\",\r\n            height: \"auto\",\r\n            padding: \"5px\",\r\n            fontSize: \"20px\"\r\n        };\r\n\r\n        const cancelButtonStyle =\r\n        {\r\n            backgroundColor: \"red\",\r\n            color: \"white\",\r\n            width: \"80px\",\r\n            margin: \"10px 10px\",\r\n            height: \"auto\",\r\n            padding: \"5px\",\r\n            fontSize: \"20px\"\r\n        };\r\n\r\n        const cardStyle =\r\n        {\r\n            backgroundColor: \"#3A4245\",\r\n            color: \"chartreuse\",\r\n            border: \"2px solid gold\",\r\n            width: \"250px\",\r\n            margin: \"10px 10px\"\r\n        };\r\n\r\n        let toBeDisplayed = myData.map((player,index) =>\r\n            {\r\n                return (\r\n                    <div id = {index} cardID = {player.cardID} tradeID = {player.tradeID} key = {index} style={cardStyle}>\r\n                        <h2>Name: {player.name}</h2>\r\n                        <h3>Rating: {player.rating}</h3>\r\n                        <h3>Position: {player.position}</h3>\r\n                        <h3>Starting bid: {player.startingBid}</h3>\r\n                        <h3>Buy Now Price: {player.buyNowPrice}</h3>\r\n                        <h3>Listing Time:</h3>\r\n                        <h3>{player.time.days} day(s), {player.time.hours} hours, {player.time.minutes} minutes.</h3>\r\n                        <h3>Player Expires:</h3>\r\n                        <div style={{marginLeft: \"20px\"}}>\r\n                        <ReactCountdownClock seconds= {player.expires - (Math.floor( new Date().getTime()/1000))}\r\n                        color=\"darkorange\"\r\n                        alpha={1}\r\n                        timeFormat=\"hms\"\r\n                        size={90}\r\n                        onComplete={() => notify.show((\"The player \" + `${player.name}` + \" has expired.\"),(\"error\"),(5000))} />\r\n                        </div>\r\n                        <h3>Auction Status: {player.status}</h3>\r\n                        <div>\r\n                        <button style={buttonStyle} onClick = {(event) => this.onBuyClick(event,player.cardID)}>Bought</button>\r\n                        <button style={cancelButtonStyle} onClick = {(event) => this.onCancelClick(event,player.cardID)}>Cancel</button>\r\n                        </div>\r\n                    </div> \r\n                );\r\n        })\r\n        \r\n        // console.log(\"To be displayed: \", toBeDisplayed);\r\n        this.setState({noPlayerDisplay: <h2>Updating....</h2>});\r\n\r\n        this.setState({\r\n            displayData: \r\n            <div style={{display:'inline-flex', justifyContent: 'center'}}>\r\n            {toBeDisplayed}\r\n            </div>,\r\n            noPlayerDisplay:\r\n            <h3></h3>\r\n        });\r\n    }\r\n\r\n    onCancelClick = (event, tradeid) =>\r\n    {\r\n//        console.log(\"Cancel requested for :\", tradeid);\r\n//        <input type=\"button\" value=\"Open\" onClick={() => this.openModal()} />\r\n        this.openModal(tradeid);\r\n    }\r\n\r\n    onBuyClick = (event,tradeid) => {\r\n//        console.log(\"Purchase requested for: \", tradeid);\r\n        let notBought = this.state.playersLeft;\r\n\r\n        let currPlayers = [...this.state.playerData];\r\n\r\n        currPlayers.forEach((element, index) => {\r\n            if(element.cardID == tradeid)\r\n            {\r\n                currPlayers[index].status=\"pending server response\";\r\n                this.checkBoughtStatus(tradeid, currPlayers, index, notBought);\r\n            }\r\n        })\r\n    }    \r\n\r\n    checkBoughtStatus = (playerID, currPlayers, index, notBought) =>\r\n    {\r\n//        console.log(\"Checking purchase status for: \", playerID);\r\n\r\n        fetch(constants.url + '/checkAuctionStatus',{\r\n            method: 'post',\r\n            headers: {'Content-Type': 'application/json'},\r\n            body: JSON.stringify({\r\n            tradeID: playerID\r\n            })\r\n        })\r\n        .then(response => response.json())             \r\n        .then(data => {\r\n            if(data.data)\r\n            {\r\n                if(data.data.tradeState)\r\n                {\r\n                    if(data.data.tradeState == 'closed')\r\n                    {\r\n                        notify.show((\"CONGRATULATIONS! \" + `${currPlayers[index].name}` + \" has been bought!.\"),(\"success\"), (5000));\r\n                        currPlayers[index].status = \"Bought!\";\r\n                        currPlayers.splice(index,1);\r\n                        // console.log(\"State Data: \", this.state.Data);\r\n             //           console.log(\"Curr Players: \", currPlayers);\r\n                        if(notBought > 0)\r\n                        {\r\n                            notBought--;\r\n            //                console.log(\"Players to be bought: \", notBought);\r\n                        }\r\n                        this.setState({playerData: currPlayers, playersLeft: notBought}, () => this.displayPlayerData(currPlayers));\r\n                    }\r\n                    else if(data.data.tradeState == 'expired')\r\n                    {\r\n                        // console.log(`You took too long buyg`);\r\n                        notify.show((\"Unfortunately, listing for \" + `${currPlayers[index].name}` + \" has EXPIRED and was not bought.\"),(\"error\"),(8000));\r\n                        currPlayers[index].status = \"This player has expired.\";\r\n                        // currPlayers.splice(index,1);\r\n                        // console.log(\"State Data: \", this.state.Data);\r\n           //             console.log(\"Curr Players: \", currPlayers);\r\n                        // if(notBought > 0)\r\n                        // {\r\n                        //     notBought--;\r\n                        //     console.log(\"Players to be bought: \", notBought);\r\n                        // }\r\n                        this.setState({playerData: currPlayers, playersLeft: notBought}, () => this.displayPlayerData(currPlayers));\r\n                    }\r\n                    else if(data.data.tradeState == 'active')\r\n                    {\r\n                        // console.log(`You took too long buyg`);\r\n                        notify.show((`${currPlayers[index].name}` + \" has not been bought yet!.\"),(\"warning\"), (8000));\r\n                        currPlayers[index].status = \"NOT Bought yet.\";\r\n                        // currPlayers.splice(index,1);\r\n                        // console.log(\"State Data: \", this.state.Data);\r\n       //                 console.log(\"Curr Players: \", currPlayers);\r\n                        // if(notBought > 0)\r\n                        // {\r\n                        //     notBought--;\r\n                        //     console.log(\"Players to be bought: \", notBought);\r\n                        // }\r\n                        this.setState({playerData: currPlayers, playersLeft: notBought}, () => this.displayPlayerData(currPlayers));\r\n                    }\r\n                }\r\n            }\r\n            else\r\n            {                \r\n                console.log(`Trade ID ${playerID}` + \" has not been bought.\");\r\n                notify.show((\"An error occured while checking status.\\nPlease retry after 2 minutes.\"), (\"warning\"), (7500));\r\n                currPlayers[index].status = \"Please re-click me after 2 minutes\";\r\n                this.setState({playerData: currPlayers, playersLeft: notBought}, () => this.displayPlayerData(currPlayers));\r\n                console.log(\"Server response for status check: \", data);\r\n            }\r\n    })\r\n        .catch(function (error) {\r\n            console.log(\"Server error for status check: \", error);\r\n            notify.show((\"An error occured while checking status.\\nPlease retry after 2 minutes.\"), (\"warning\"), (7500));\r\n            currPlayers[index].status = \"Please re-click me after 2 minutes\";\r\n            this.setState({playerData: currPlayers, playersLeft: notBought}, () => this.displayPlayerData(currPlayers));\r\n    });\r\n\r\n    }\r\n\r\n    onChange = (event) =>\r\n    {\r\n        if(event.target.value > 0)\r\n        {\r\n            if(event.target.value > 4)\r\n                this.setState({\r\n                    instance: 4,\r\n                    maxPlayers: 4\r\n                });\r\n            else\r\n            {\r\n                this.setState({\r\n                    instance: event.target.value,\r\n                    maxPlayers: event.target.value\r\n                });\r\n            }\r\n        }\r\n        else\r\n        {\r\n            this.setState({\r\n                instance: \"\",\r\n                maxPlayers: 2\r\n        });\r\n        }\r\n    }\r\n\r\n    onKeyDown = (event) =>\r\n    {\r\n        if(event.key == \"Enter\")\r\n        {\r\n            this.onSubmit();\r\n        }\r\n        else if(event.key == \"Shift\")\r\n        {\r\n            this.setState({playSoundStatus: \"STOPPED\"});\r\n        }\r\n    }\r\n\r\n    getDataFromServer = () =>\r\n    {\r\n        let max = this.state.maxPlayers;\r\n        if(this.state.playersLeft < max)\r\n        {\r\n            if(this.state.searching)\r\n            {\r\n//                let myEmail = this.state.isAdmin ? \"waqar@gmail.com\" : this.state.email;\r\n                setTimeout(() => {\r\n                    fetch(constants.url + '/getData',{\r\n                        method: 'post',\r\n                        headers: {'Content-Type': 'application/json'},\r\n                        body: JSON.stringify({\r\n                        email: this.state.email,\r\n                        apikey: this.state.apikey,\r\n                        instance: this.state.instance\r\n                        })\r\n                    })\r\n                    .then(response => response.json())             \r\n                    .then(data => {\r\n                        if(data.data)\r\n                        {\r\n                            if(this.state.playersLeft < max)\r\n                            {\r\n                                this.setState({playSoundStatus: \"PLAYING\"});\r\n                                this.storePlayerData(data);\r\n                                this.getDataFromServer();\r\n                            }\r\n                            else\r\n                            {                                \r\n                                this.setState({playSoundStatus: \"PLAYING\", buttonText: \"Request Players.\", searching: false});\r\n                                this.storePlayerData(data);\r\n                            }\r\n                        }\r\n                        else\r\n                        {\r\n                            console.log(\"Response: \", data.message);\r\n                            this.getDataFromServer();\r\n                            //                    this.setState({noPlayerDisplay: <h3>{`${data.message} \\t`}</h3>})\r\n                        }\r\n                    })\r\n                    .catch(function (error) {\r\n                        notify.show(\"Unexpected error occured while requesting players. Please try later or contact the administrator if the problem persists.\", \"warning\", 15000);\r\n                    });    \r\n                }, 500);\r\n            }\r\n        }        \r\n        else\r\n        {\r\n//            const players = this.state.playersLeft;\r\n//            alert(`Please buy the remaining ${players} player(s) before requesting new players.`);\r\n              this.setState({playSoundStatus: \"PLAYING\", buttonText: \"Request Players.\", searching: false});\r\n//              this.storePlayerData(data);\r\n        }\r\n    }\r\n    \r\n    onSubmit = () =>\r\n    {\r\n        if(this.state.buttonText == \"Stop Requesting Players.\")\r\n        {\r\n            this.setState({\r\n                buttonText: \"Request Players.\", \r\n                noPlayerDisplay: <h3>Press \"Request Players\" to search for players....</h3>, \r\n                searching: false\r\n            });\r\n        }\r\n        else{\r\n            this.setState({\r\n            buttonText: \"Stop Requesting Players.\", \r\n            noPlayerDisplay: <h3>Searching for players....</h3>, \r\n            searching: true},\r\n            () => this.getDataFromServer()\r\n            );\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        \r\n        window.addEventListener(\"beforeunload\", (ev) => {\r\n            ev.preventDefault();\r\n            this.onClickSignOut();\r\n        });\r\n\r\n        fetch(constants.url + '/pricefetch')\r\n        .then(response => response.json())\r\n        .then(data => {\r\n//            console.log(\"Data for todays rate is: \", data);\r\n            if(data.billingRate)\r\n            {\r\n                const billRate = data.billingRate;\r\n//                const billRate = 0.080;\r\n                let newRate = billRate - 0.003;\r\n                newRate = Math.floor(newRate * 100 * 158 * 0.52);\r\n                this.setState({billingRate: `PKR ${newRate} / 100K`});\r\n                //per 1000 coins = 0.052 euro;\r\n                //per 100,000 = 5.2 euro;\r\n                //5.2 euro in pkr = 820.0 rs\r\n                //give client 425.0 rs.\r\n                // we get 395 rs per 100k.\r\n\r\n\r\n                // STEPS FOR CALCULATION\r\n                // newRate = rate - 0.003;\r\n                // newRate = newRate * 100; (per 100K)\r\n                // newRate = newRate * 158; (per 100K in PKR).\r\n                // showToClient = newRate * 0.52; (per 100K in PKR - our profit)\r\n                // display = \"Today's rate is {showToClient} per 100K\";\r\n\r\n\r\n            }\r\n        })\r\n        .catch(err => notify.show(\"Error while fetching rate from server. Please re-login to get today's rate.\", \"warning\", 7500));\r\n    }\r\n    \r\n    onClickSignOut = () => {\r\n\r\n        let email = this.state.email;\r\n\r\n        fetch(constants.url + '/signout',{\r\n            method: 'post',\r\n            headers: {'Content-Type': 'application/json'},\r\n            body: JSON.stringify({\r\n            email: email\r\n            })\r\n        })\r\n        .then(response => response.json())             \r\n        .then(data => {\r\n            console.log(\"Logged out.\");\r\n            this.props.updateRoute(\"Login\");\r\n        })\r\n        .catch(err => notify.show(\"The page behaved unexpectedly while trying to log out. You can safely close the browser now.\", \"success\", 7000));\r\n    }\r\n\r\n    onClickTable = () =>\r\n    {\r\n        this.props.updateRoute(\"Table\");\r\n    }\r\n\r\n    signOutAllUsers = () =>\r\n    {\r\n        fetch(constants.url + '/supersignout',{\r\n            method: 'post',\r\n            headers: {'Content-Type': 'application/json'},\r\n            body: JSON.stringify({\r\n            email: this.state.email\r\n            })\r\n        })\r\n        .then(response => response.json())             \r\n        .then(data => {\r\n            if(data.message == \"SUCCESS\")\r\n            {\r\n                notify.show(\"All users logged out.\", \"success\", 6000);\r\n            }\r\n            else\r\n            {\r\n                notify.show(\"The page behaved unexpectedly while trying to log out. Please try again shortly.\", \"error\", 10000);\r\n            }\r\n        })\r\n        .catch(err => notify.show(\"The page behaved unexpectedly while trying to log out. Please try again shortly.\", \"error\", 10000));\r\n    }\r\n\r\n    render() {\r\n        let isAdminStatus = this.state.isAdmin;\r\n    //    console.log(\"isAdmin :\", isAdminStatus);\r\n        let superLogOut = null;\r\n        if(isAdminStatus)\r\n        {\r\n            superLogOut = \r\n            <div>\r\n            <button \r\n            style = {{backgroundColor: \"black\", color:\"white\", borderColor: \"gold\", \r\n                  width: \"auto\", height: \"auto\", padding: \"8px\", margin: \"30px 50px\"}}                        \r\n            onClick={this.onClickTable}>Records</button>\r\n            <button \r\n            style = {{backgroundColor: \"black\", color:\"red\", borderColor: \"gold\", \r\n                  width: \"auto\", height: \"auto\", padding: \"8px\", margin: \"30px 50px\"}}                        \r\n            onClick={this.signOutAllUsers}>Log ALL USERS Out</button>\r\n            </div>;\r\n        }\r\n\r\n        return (\r\n            <div>\r\n            <Notifications />\r\n            <div style={{display:\"flex\", width: \"100%\"}}  tabIndex = {1} key = {this.state.playersLeft} onKeyDown = {this.onKeyDown} >\r\n                    \r\n                    <div style = {{display:\"flex-start\", width: \"20%\"}} id = \"ALL NON-PLAYER INFO\">\r\n\r\n                    <div style={{display:'flex', justifyContent: 'center'}}>\r\n                    <h3 style ={{color: \"chartreuse\"}}>Today's rate is: {this.state.billingRate}</h3>\r\n                    </div>\r\n                    \r\n                    <div>\r\n                    <h4>Max no of players at once: </h4>\r\n                    <input style={{marginLeft: '10px', borderColor: \"gold\", borderWidth: \"3px\",\r\n                                    backgroundColor: \"#3A4245\", color: \"gold\", textAlign: \"center\",\r\n                                   width: \"100px\", height: \"25px\"\r\n                            }}\r\n                        placeholder= \"default is 2\" \r\n                        value = {this.state.instance}\r\n                        onChange={this.onChange} ></input>\r\n                    </div>\r\n\r\n                    <div>\r\n                    <button \r\n                    style={{backgroundColor: \"#3A4245\", color:\"gold\", borderColor: \"gold\",  \r\n                    width: \"120px\", height: \"auto\", padding: \"8px\", margin: \"50px 50px\"}}\r\n                    onClick = {() => this.setState({playSoundStatus: \"STOPPED\"})}>\r\n                    STOP SOUND\r\n                    </button>\r\n                    <button \r\n                    onClick={this.onSubmit}\r\n                    // #3A4245\r\n                    style = {{backgroundColor: \"#3A4245\", color:\"chartreuse\", borderColor: \"gold\", \r\n                              width: \"150px\", height: \"auto\", padding: \"4px\", margin: \"5px 50px\"}}\r\n                    >\r\n                    {this.state.buttonText.toUpperCase()}\r\n                    </button>\r\n                    </div>\r\n                    <div>\r\n                        <button \r\n                        style = {{backgroundColor: \"black\", color:\"red\", borderColor: \"gold\", \r\n                              width: \"auto\", height: \"auto\", padding: \"8px\", margin: \"30px 50px\"}}                        \r\n                        onClick={this.onClickSignOut}>Log Out</button>\r\n                        {superLogOut}\r\n                    </div>\r\n                    </div>\r\n\r\n\r\n\r\n                    <div id=\"PLAYER DATA\" style = {{display:\"flex-end\", width: \"80%\"}}>\r\n                        <div style = {{width: \"100%\", overflowX: \"auto\"}}>\r\n                            <div style={{marginLeft: \"45%\"}}>\r\n                            {this.state.searching ? <h3><ReactLoading type=\"spin\" color=\"chartreuse\"/></h3> : null}  \r\n                            </div>\r\n                            {this.state.displayData}\r\n                            <br />\r\n                            {this.state.noPlayerDisplay}\r\n                        </div>\r\n                    </div>\r\n\r\n            </div>\r\n\r\n            <div id=\"MODAL AND SOUND\">\r\n                    <section>\r\n                        {/* <input type=\"button\" value=\"Open\" onClick={() => this.openModal()} /> */}\r\n                        <Modal \r\n                            visible={this.state.visible}\r\n                            width=\"400\"\r\n                            height=\"300\"\r\n                            effect=\"fadeInUp\"\r\n                            style = {{backgroundColor: \"cadetblue\", color: \"gold\",\r\n                                    border: \"5px solid red\", borderSize: \"10px\"\r\n                            }}\r\n                            // onClickAway={() => this.closeModal()}\r\n                        >\r\n                            <div>\r\n                                <h1>Cancel Purchase</h1>\r\n                                <p>Are you sure you want to cancel the purchase of this player? Click YES to proceed, or NO to go back.</p>\r\n                                <br />\r\n                                <button onClick = {this.clickModalOK} \r\n                                style={{backgroundColor: \"red\", color: \"white\", width: \"100px\", height: \"50px\"}}>\r\n                                YES\r\n                                </button>\r\n                                <br />\r\n                                <br />\r\n                                <button onClick = {this.closeModal} \r\n                                style={{backgroundColor: \"green\", color: \"white\",width: \"100px\", height: \"50px\"}}>\r\n                                NO\r\n                                </button>\r\n                            </div>\r\n                        </Modal>\r\n                    </section>\r\n                    <Sound\r\n                    url=\"https://www.soundjay.com/button/beep-08b.mp3\"\r\n                    playStatus={this.state.playSoundStatus}\r\n                    playFromPosition={0 /* in milliseconds */}\r\n                    volume={100}\r\n                    autoLoad={true}\r\n                    loop={true}\r\n                    // onLoading={this.handleSongLoading}\r\n                    // onPlaying={this.handleSongPlaying}\r\n                    // onFinishedPlaying={this.handleSongFinishedPlaying}\r\n                    />\r\n            </div> \r\n\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default PlayerHandler;\r\n\r\n\r\n\r\n\r\n    // render1() {\r\n    //     return (\r\n    //         <div tabIndex = {1} key = {this.state.playersLeft} onKeyDown = {this.onKeyDown} >\r\n    //                 <div style={{display:'flex', justifyContent: 'center'}}>\r\n    //                 <h3 style ={{color: \"chartreuse\"}}>Today's rate is: {this.state.billingRate}</h3>\r\n    //                 </div>\r\n    //                 <div>\r\n    //                 <h4>Max no of players at once: </h4>\r\n    //                 <input style={{marginLeft: '10px', borderColor: \"gold\", borderWidth: \"3px\",\r\n    //                                 backgroundColor: \"#3A4245\", color: \"gold\", textAlign: \"center\",\r\n    //                                width: \"50px\", height: \"20px\"\r\n    //                         }}\r\n    //                     placeholder= \"\" \r\n    //                     value = {`${this.state.instance}`}\r\n    //                     onChange={this.onChange} ></input>\r\n    //                 </div>\r\n    //                 <div>\r\n    //                 {this.state.noPlayerDisplay}\r\n    //                 </div>\r\n    //                 <div>\r\n    //                 <button \r\n    //                 style={{backgroundColor: \"#3A4245\", color:\"gold\", borderColor: \"gold\",  \r\n    //                 width: \"auto\", height: \"auto\", padding: \"8px\", margin: \"0px 50px\"}}\r\n    //                 onClick = {() => this.setState({playSoundStatus: \"STOPPED\"})}>\r\n    //                 STOP SOUND\r\n    //                 </button>\r\n    //                 <button \r\n    //                 onClick={this.onSubmit}\r\n    //                 // #3A4245\r\n    //                 style = {{backgroundColor: \"#3A4245\", color:\"chartreuse\", borderColor: \"gold\", \r\n    //                           width: \"auto\", height: \"auto\", padding: \"8px\", margin: \"0px 50px\"}}\r\n    //                 >\r\n    //                 {this.state.buttonText.toUpperCase()}\r\n    //                 </button>\r\n    //                 </div>\r\n    //                 <div style={{display:'flex', justifyContent: \"center\", overflow: \"auto\", width: \"90%\", margin:\"auto auto\"}}>\r\n    //                 <div>\r\n    //                 {this.state.displayData}  \r\n    //                 </div>\r\n    //                 </div>\r\n    //                 <section>\r\n    //                     {/* <input type=\"button\" value=\"Open\" onClick={() => this.openModal()} /> */}\r\n    //                     <Modal \r\n    //                         visible={this.state.visible}\r\n    //                         width=\"400\"\r\n    //                         height=\"300\"\r\n    //                         effect=\"fadeInUp\"\r\n    //                         style = {{backgroundColor: \"cadetblue\", color: \"gold\",\r\n    //                                 border: \"5px solid red\", borderSize: \"10px\"\r\n    //                         }}\r\n    //                         // onClickAway={() => this.closeModal()}\r\n    //                     >\r\n    //                         <div>\r\n    //                             <h1>Cancel Purchase</h1>\r\n    //                             <p>Are you sure you want to cancel the purchase of this player? Click YES to proceed, or NO to go back.</p>\r\n    //                             <br />\r\n    //                             <button onClick = {this.clickModalOK} \r\n    //                             style={{backgroundColor: \"red\", color: \"white\", width: \"100px\", height: \"50px\"}}>\r\n    //                             YES\r\n    //                             </button>\r\n    //                             <br />\r\n    //                             <br />\r\n    //                             <button onClick = {this.closeModal} \r\n    //                             style={{backgroundColor: \"green\", color: \"white\",width: \"100px\", height: \"50px\"}}>\r\n    //                             NO\r\n    //                             </button>\r\n    //                         </div>\r\n    //                     </Modal>\r\n    //                 </section>\r\n    //                 <Sound\r\n    //                 url=\"https://www.soundjay.com/button/beep-08b.mp3\"\r\n    //                 playStatus={this.state.playSoundStatus}\r\n    //                 playFromPosition={0 /* in milliseconds */}\r\n    //                 volume={100}\r\n    //                 autoLoad={true}\r\n    //                 loop={true}\r\n    //                 // onLoading={this.handleSongLoading}\r\n    //                 // onPlaying={this.handleSongPlaying}\r\n    //                 // onFinishedPlaying={this.handleSongFinishedPlaying}\r\n    //                 />\r\n    //         </div> \r\n    //     );\r\n    // }\r\n","import React, { Component } from 'react';\nimport './App.css';\nimport Register from './Register';\nimport PlayerData from './PlayerData';\nimport SignIn from './SignIn';\nimport TableClass from './TableClass';\nimport PlayerHandler from './PlayerHandler';\nimport 'tachyons';\n\n// let cors = require('cors');\n// app.use(cors());\n\n\nvar display = null;\n\nclass App extends Component {\n\n  state = {\n    route: \"Login\",\n    email: \"\",\n    apikey: \"\",\n  };\n\n  updateRoute = (value) =>\n  {\n    this.setState({\n      route: value\n    });\n  }\n\n  setEmailAndApiKey = (email,key) => {\n\n    this.setState({\n      email: email,\n      apikey: key\n    });\n  };\n\n  onSubmit = (query) =>\n  {\n    let that = this;\n  }\n  \n  componentDidMount() {\n    window.addEventListener(\"beforeunload\", function (e) {\n      var confirmationMessage = \"\\o/\";\n    \n      (e || window.event).returnValue = confirmationMessage; //Gecko + IE\n      alert(\"Allah Hafiz.\");\n      return confirmationMessage;                            //Webkit, Safari, Chrome\n    });    \n  }\n  \n\n  render() {\n    if(this.state.route == \"Login\")\n    {\n      display = \n      <div>\n      <SignIn updateRoute={this.updateRoute} setEmailAndApiKey={this.setEmailAndApiKey}/>\n      </div>\n    }\n    else if (this.state.route == \"Register\")\n    {\n      display = <Register updateRoute={this.updateRoute}/>\n    }\n    else if(this.state.route == \"App\")\n    {\n      display =  \n      <div>\n        <PlayerHandler data={this.state} updateRoute={this.updateRoute}/>\n      </div>\n    }\n    else if(this.state.route == \"Table\")\n    {\n      display =  \n      <div>\n        <TableClass data={this.state} updateRoute={this.updateRoute}/>\n      </div>\n    }\n    return (\n      <div className=\"App\">\n        <h2 style={{display: 'flex', justifyContent: 'center'}}>Welcome to FUT Player Market</h2>\n        {display}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}